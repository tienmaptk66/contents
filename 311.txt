import streamlit as st
import openai

openai.api_key = "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"

st.set_page_config(page_title="T·∫°o m√¥ t·∫£ s·∫£n ph·∫©m t·ª± ƒë·ªông", page_icon="üìù")

def generate_article(keyword, writing_style, word_count):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "user", "content": f"Write a SEO optimized article about {keyword}"},
                {"role": "user", "content": f"This article should be in style {writing_style}"},
                {"role": "user", "content": f"The article length should be {word_count}"},
            ]
        )

        result = ''
        for choice in response['choices']:
            result += choice['message']['content']

        return result

    except openai.error.OpenAIError as e:
        st.error(f"OpenAI API error: {e}")
        return None

with st.sidebar:
    st.title("T·∫°o m√¥ t·∫£ s·∫£n ph·∫©m t·ª± ƒë·ªông")
    keyword = st.text_input("Nh·∫≠p T·ª´ Kh√≥a")
    industry_options = [
        "Ch√≠nh tr·ªã v√† S·ª± ki·ªán X√£ h·ªôi", "Kinh t·∫ø v√† T√†i ch√≠nh", "Y t·∫ø v√† Y h·ªçc",
        "C√¥ng ngh·ªá v√† ƒêi·ªán t·ª≠", "M√¥i tr∆∞·ªùng v√† NƒÉng l∆∞·ª£ng", "Gi√°o d·ª•c", "VƒÉn h√≥a v√† Ngh·ªá thu·∫≠t",
        "Th·ªÉ thao", "Du l·ªãch v√† L·ªëi s·ªëng", "Khoa h·ªçc v√† C√¥ng ngh·ªá", "An ninh v√† Qu·ªëc ph√≤ng"
    ]
    industry = st.selectbox("Ng√†nh H√†ng", industry_options)
    writing_style_options = ["B√¨nh h∆∞·ªùng", "Chuy√™n Nghi·ªáp", "Vui T∆∞∆°i", "H√†i H∆∞·ªõc", "Thuy·∫øt Ph·ª•c"]
    writing_style = st.selectbox("Ch·ªçn ki·ªÉu vi·∫øt", writing_style_options)
    other_request = st.text_input("Y√™u c·∫ßu kh√°c")
    word_count = st.slider("S·ªë T·ª´", min_value=300, max_value=2000, value=300)
    submit_button = st.button("√Åp d·ª•ng m√¥ t·∫£")
    submit_button_another = st.button("T·∫°o M√¥ T·∫£ Kh√°c")

if submit_button:
    message = st.empty()
    message.text("ƒêang t·∫°o m√¥ t·∫£...")
    article = generate_article(keyword, writing_style, word_count)

    if article is not None:
        message.text("")
        st.write(article)
        st.download_button(label="T·∫£i xu·ªëng m√¥ t·∫£", data=article, file_name="mo_ta_san_pham.txt", mime="text/plain")
    else:
        st.error("L·ªói t·∫°o m√¥ t·∫£. Vui l√≤ng th·ª≠ l·∫°i.")
